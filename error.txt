root@qingfusheng-VirtualBox:~/git/testing/cpr# g++ main.cpp libcpr.a -o output
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::Impl()’中：
session.cpp:(.text+0xec)：对‘curl_version_info’未定义的引用
session.cpp:(.text+0x16b)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0x186)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0x1a1)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0x1bc)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0x1e9)：对‘curl_easy_setopt’未定义的引用
libcpr.a(session.cpp.o):session.cpp:(.text+0x206): 跟着更多未定义的参考到 curl_easy_setopt
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::SetHeader(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, cpr::CaseInsensitiveCompare, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)’中：
session.cpp:(.text+0x4cd)：对‘curl_slist_append’未定义的引用
session.cpp:(.text+0x51a)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0x539)：对‘curl_slist_free_all’未定义的引用
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::SetTimeout(cpr::Timeout const&)’中：
session.cpp:(.text+0x5f9)：对‘curl_easy_setopt’未定义的引用
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::SetConnectTimeout(cpr::ConnectTimeout const&)’中：
session.cpp:(.text+0x64f)：对‘curl_easy_setopt’未定义的引用
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::SetVerbose(cpr::Verbose const&)’中：
session.cpp:(.text+0x6ad)：对‘curl_easy_setopt’未定义的引用
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::SetAuth(cpr::Authentication const&)’中：
session.cpp:(.text+0x6f9)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0x729)：对‘curl_easy_setopt’未定义的引用
libcpr.a(session.cpp.o):session.cpp:(.text+0x775): 跟着更多未定义的参考到 curl_easy_setopt
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::SetMultipart(cpr::Multipart&&)’中：
session.cpp:(.text+0xbd7)：对‘curl_formadd’未定义的引用
session.cpp:(.text+0xc0e)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0xc37)：对‘curl_formfree’未定义的引用
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::SetMultipart(cpr::Multipart const&)’中：
session.cpp:(.text+0xf05)：对‘curl_formadd’未定义的引用
session.cpp:(.text+0xf3c)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0xf65)：对‘curl_formfree’未定义的引用
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::SetLimitRate(cpr::LimitRate const&)’中：
session.cpp:(.text+0x1009)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0x1027)：对‘curl_easy_setopt’未定义的引用
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::SetNTLM(cpr::NTLM const&)’中：
session.cpp:(.text+0x1073)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0x10a3)：对‘curl_easy_setopt’未定义的引用
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::SetRedirect(bool const&)’中：
session.cpp:(.text+0x10f4)：对‘curl_easy_setopt’未定义的引用
libcpr.a(session.cpp.o):session.cpp:(.text+0x1142): 跟着更多未定义的参考到 curl_easy_setopt
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::makeDownloadRequest(void*, std::basic_ofstream<char, std::char_traits<char> >&)’中：
session.cpp:(.text+0x2106)：对‘curl_easy_perform’未定义的引用
session.cpp:(.text+0x212c)：对‘curl_easy_getinfo’未定义的引用
session.cpp:(.text+0x2154)：对‘curl_slist_free_all’未定义的引用
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::makeRequest(void*)’中：
session.cpp:(.text+0x24b4)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0x24f4)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0x25ae)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0x25ce)：对‘curl_easy_setopt’未定义的引用
session.cpp:(.text+0x25ee)：对‘curl_easy_setopt’未定义的引用
libcpr.a(session.cpp.o):session.cpp:(.text+0x2640): 跟着更多未定义的参考到 curl_easy_setopt
libcpr.a(session.cpp.o)：在函数‘cpr::Session::Impl::makeRequest(void*)’中：
session.cpp:(.text+0x268c)：对‘curl_easy_perform’未定义的引用
session.cpp:(.text+0x26b2)：对‘curl_easy_getinfo’未定义的引用
session.cpp:(.text+0x26da)：对‘curl_slist_free_all’未定义的引用
libcpr.a(session.cpp.o)：在函数‘cpr::Response::Response(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, cpr::Cookies&&, cpr::Error&&)’中：
session.cpp:(.text._ZN3cpr8ResponseC2EPvONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ONS_7CookiesEONS_5ErrorE[_ZN3cpr8ResponseC5EPvONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ONS_7CookiesEONS_5ErrorE]+0x189)：对‘curl_easy_getinfo’未定义的引用
session.cpp:(.text._ZN3cpr8ResponseC2EPvONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ONS_7CookiesEONS_5ErrorE[_ZN3cpr8ResponseC5EPvONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ONS_7CookiesEONS_5ErrorE]+0x1aa)：对‘curl_easy_getinfo’未定义的引用
session.cpp:(.text._ZN3cpr8ResponseC2EPvONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ONS_7CookiesEONS_5ErrorE[_ZN3cpr8ResponseC5EPvONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ONS_7CookiesEONS_5ErrorE]+0x1cc)：对‘curl_easy_getinfo’未定义的引用
session.cpp:(.text._ZN3cpr8ResponseC2EPvONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ONS_7CookiesEONS_5ErrorE[_ZN3cpr8ResponseC5EPvONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ONS_7CookiesEONS_5ErrorE]+0x223)：对‘curl_easy_getinfo’未定义的引用
session.cpp:(.text._ZN3cpr8ResponseC2EPvONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ONS_7CookiesEONS_5ErrorE[_ZN3cpr8ResponseC5EPvONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ONS_7CookiesEONS_5ErrorE]+0x244)：对‘curl_easy_getinfo’未定义的引用
libcpr.a(session.cpp.o):session.cpp:(.text._ZN3cpr8ResponseC2EPvONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ONS_7CookiesEONS_5ErrorE[_ZN3cpr8ResponseC5EPvONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ONS_7CookiesEONS_5ErrorE]+0x265): 跟着更多未定义的参考到 curl_easy_getinfo
libcpr.a(curlholder.cpp.o)：在函数‘cpr::CurlHolder::CurlHolder()’中：
curlholder.cpp:(.text+0xba)：对‘curl_easy_init’未定义的引用
libcpr.a(curlholder.cpp.o)：在函数‘cpr::CurlHolder::~CurlHolder()’中：
curlholder.cpp:(.text+0x119)：对‘curl_easy_cleanup’未定义的引用
curlholder.cpp:(.text+0x129)：对‘curl_slist_free_all’未定义的引用
curlholder.cpp:(.text+0x139)：对‘curl_formfree’未定义的引用
libcpr.a(curlholder.cpp.o)：在函数‘cpr::CurlHolder::urlEncode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const’中：
curlholder.cpp:(.text+0x1bc)：对‘curl_easy_escape’未定义的引用
curlholder.cpp:(.text+0x202)：对‘curl_free’未定义的引用
collect2: error: ld returned 1 exit status
root@qingfusheng-VirtualBox:~/git/testing/cpr# 

